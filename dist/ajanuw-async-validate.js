!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["ajanuw-async-validate"]=e():t["ajanuw-async-validate"]=e()}(this,(function(){return(()=>{"use strict";var t={209:(t,e,r)=>{r.r(e),r.d(e,{AsyncValidate:()=>i});class i{constructor(t,e){this.options=t,this.config=Object.assign({checkAll:!1},e)}static mixin(t){Object.keys(t).filter((t=>{if(!i.hasOwnProperty(t))return t})).forEach((e=>i[e]=t[e]))}_isSuccess(t){return 0===Object.keys(t).length}_handleValidate(t){if(!t)return[];if(Array.isArray(t))return t;if("function"==typeof t)return[t];if("[object Object]"===Object.prototype.toString.call(t)){let e=[];for(const r in t)if(!["validators","fail"].includes(r)){if(!i.hasOwnProperty(r))throw new Error(`[[ AsyncValidate ]] not set "${r}" validate.`);{let a=t[r];Array.isArray(a)||(a=[a]);const n=i[r](...a);e.push(n)}}return t.validators instanceof i||(e=e.concat(this._handleValidate(t.validators))),e}return[]}async _eachValidates(t,e,r,i){const a=this._handleValidate(this.options[t]);for(const t of a){const a=await t(e,r);a&&i(a)}}_fail(t){this.config.fail?this.config.fail(t):i.fail&&i.fail(t)}async validate(t){const e={};let r=this._isSuccess(e);for(const a in t){const n=t[a];if(this.options.hasOwnProperty(a)){if(await this._eachValidates(a,n,t,(t=>{e[a]||(e[a]={value:n,errors:{}}),Object.assign(e[a].errors,t)})),e.hasOwnProperty(a)&&this.options[a].hasOwnProperty("fail")&&this.options[a].fail(e[a]),r=this._isSuccess(e),!r&&!this.config.checkAll){this._fail(e);break}if(this.options[a].hasOwnProperty("validators")&&this.options[a].validators instanceof i){const t=this.options[a].validators;if(t.config.fail||(t.config.fail=this.config.fail),r=await t.validate(n),!this.config.checkAll&&!r)break}}else console.warn(`[[ AsyncValidate ]] "${a}" validate is not set.`)}return!r&&this.config.checkAll&&this._fail(e),r}static required(t){return e=>{if(!e)return{required:t}}}static minLength(t,e){return r=>{if("string"==typeof r&&r.length<parseFloat(t))return{minLength:e}}}static maxLength(t,e){return r=>{if("string"==typeof r&&r.length>parseFloat(t))return{maxLength:e}}}static phone(t){return e=>{if("string"==typeof e&&!e.match(i.PHONE_EXP))return{phone:t}}}static eql(t,e){return r=>{if(r!==t)return{eql:e}}}static equal(t,e){return r=>{if(r!=t)return{equal:e}}}static bool(t){return e=>{if(!0!==e&&!1!==e)return{bool:t}}}static email(t){return e=>{if(!e.match(i.EMAIL_EXP))return{email:t}}}static max(t,e){return r=>{if(!isNaN(r)&&r>parseFloat(t))return{max:e}}}static min(t,e){return r=>{if(!isNaN(r)&&r<parseFloat(t))return{min:e}}}static hex(t){return e=>{if(e=(e=e.replace(/^0x/i,"")).replace(/h$/i,""),/[^0-9a-fA-F]/.test(e))return{hex:t}}}static number(t){return e=>{if(!Number.isFinite(e)||"number"!=typeof e)return{number:t}}}static int(t){return(e,r)=>{if(this.number("")(e,r)||!Number.isSafeInteger(e))return{int:t}}}static float(t){return(e,r)=>{if(this.number("")(e,r)||Number.isInteger(e))return{float:t}}}static array(t){return e=>{if(!Array.isArray(e))return{array:t}}}static object(t){return e=>{if("[object Object]"!==Object.prototype.toString.call(e))return{object:t}}}static json(t){return e=>{try{JSON.parse(e)}catch(e){return{json:t}}}}static regexp(t){return e=>{if(!(e instanceof RegExp))return{regexp:t}}}}i.PHONE_EXP=/^((13[0-9])|(14[0-9])|(15[0-9])|(16[0-9])|(17[0-9])|(18[0-9])|(19[0-9]))\d{8}$/,i.EMAIL_EXP=/^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/}},e={};function r(i){if(e[i])return e[i].exports;var a=e[i]={exports:{}};return t[i](a,a.exports,r),a.exports}return r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r(209)})()}));